# armgen

`python3 decision_tree_generator.py` will read `instrs_32` and `instrs_64` and output
`armgen_32.cpp` and `armgen_64.cpp`, respectively.

The function `proton_armcheck_check_buffer` is the entry point for the checker. It takes the
following parameters:

- `buf` is the buffer to check
- `len` is the size
- `fail_idx` is an output parameter where, on failure, the offset into `buf` that caused the
  failure will be written.
- `fail_instr_name` is an output parameter where, on failure, the name of the failed instruction
  will be written.
- `fail_test_name` is an output parameter where, on failure, the name of the failed test will be
  written.

The return value is `true` on success, and `false` otherwise.

Right now the checker just scans the whole buffer checking each 32-bit word.
This may need to change in the future.

# building wasm sandbox

1. Clone and build: https://github.com/PLSysSec/rlbox_lucet_sandbox
2. Symilnk the `build` and `c_src` directories here.
3. cmake -S . -B ./out
4. cd out && make
